name: 'GitHub Actions'
'on':
    - push
concurrency: 'ci-${{ github.ref }}'
env:
    APP_IMAGE: keboola/dbt-transformation
    KBC_DEVELOPERPORTAL_VENDOR: keboola
    KBC_DEVELOPERPORTAL_APP: keboola.dbt-transformation
    KBC_DEVELOPERPORTAL_USERNAME: keboola+dbt_transformation_gha
    KBC_DEVELOPERPORTAL_PASSWORD: '${{ secrets.KBC_DEVELOPERPORTAL_PASSWORD }}'

    # Snowflake Credentials
    SNOWFLAKE_HOST: "keboola.snowflakecomputing.com"
    SNOWFLAKE_PORT: 443
    SNOWFLAKE_WAREHOUSE: "KEBOOLA_PROD_SMALL"
    SNOWFLAKE_DATABASE: "SAPI_9317"
    SNOWFLAKE_SCHEMA: "WORKSPACE_875822722"
    SNOWFLAKE_USER: "SAPI_WORKSPACE_875822722"
    SNOWFLAKE_PASSWORD: ${{ secrets.SNOWFLAKE_PASSWORD }}

    GITHUB_USERNAME: "dbt-test-project-user"
    GITHUB_PASSWORD: ${{ secrets.GH_PAT }}

    KBC_URL: "https://connection.keboola.com"
    KBC_TOKEN: ${{ secrets.KBC_API_TOKEN }}
    KBC_TOKEN_NO_RO_MAPPING: ${{ secrets.KBC_API_TOKEN_NO_RO_MAPPING }}

    DOCKERHUB_USER: '${{ secrets.DOCKERHUB_USER }}'
    DOCKERHUB_TOKEN: '${{ secrets.DOCKERHUB_TOKEN }}'
    KBC_STORAGE_TOKEN: '${{ secrets.KBC_STORAGE_TOKEN }}'
    KBC_TEST_PROJECT_URL: ''
    KBC_TEST_PROJECT_CONFIGS: ''
jobs:
    build:
        runs-on: ubuntu-latest
        outputs:
            app_image_tag: '${{ steps.tag.outputs.app_image_tag }}'
            is_semantic_tag: '${{ steps.tag.outputs.is_semantic_tag }}'
        steps:
            -
                name: 'Check out the repo'
                uses: actions/checkout@v2
            -
                name: 'Print Docker version'
                run: 'docker -v'
            -
                name: 'Docker login'
                if: env.DOCKERHUB_TOKEN
                run: 'docker login --username "$DOCKERHUB_USER" --password "$DOCKERHUB_TOKEN"'
            -
                name: 'Build image'
                run: 'docker build -t $APP_IMAGE .'
            -
                name: 'Set image tag'
                id: tag
                run: |
                    TAG="${GITHUB_REF##*/}"
                    IS_SEMANTIC_TAG=$(echo "$TAG" | grep -q '^v\?[0-9]\+\.[0-9]\+\.[0-9]\+$' && echo true || echo false)
                    echo "Tag = '$TAG', is semantic tag = '$IS_SEMANTIC_TAG'"
                    echo "::set-output name=app_image_tag::$TAG"
                    echo "::set-output name=is_semantic_tag::$IS_SEMANTIC_TAG"
            -
                name: 'Push image to ECR'
                uses: keboola/action-push-to-ecr@master
                with:
                    vendor: '${{ env.KBC_DEVELOPERPORTAL_VENDOR }}'
                    app_id: '${{ env.KBC_DEVELOPERPORTAL_APP }}'
                    username: '${{ env.KBC_DEVELOPERPORTAL_USERNAME }}'
                    password: '${{ env.KBC_DEVELOPERPORTAL_PASSWORD }}'
                    tag: '${{ steps.tag.outputs.app_image_tag }}'
                    push_latest: '${{ steps.tag.outputs.is_semantic_tag }}'
                    source_image: '${{ env.APP_IMAGE }}'
    tests:
        needs: build
        runs-on: ubuntu-latest
        steps:
            -
                name: 'Check out the repo'
                uses: actions/checkout@v2
            -
                name: 'Pull image from ECR'
                uses: keboola/action-pull-from-ecr@master
                with:
                    vendor: '${{ env.KBC_DEVELOPERPORTAL_VENDOR }}'
                    app_id: '${{ env.KBC_DEVELOPERPORTAL_APP }}'
                    username: '${{ env.KBC_DEVELOPERPORTAL_USERNAME }}'
                    password: '${{ env.KBC_DEVELOPERPORTAL_PASSWORD }}'
                    tag: '${{ needs.build.outputs.app_image_tag }}'
                    target_image: '${{ env.APP_IMAGE}}'
                    tag_as_latest: true
            -
                name: 'Run tests'
                run: |
                    docker-compose run dev composer install
                    docker-compose run wait
                    docker-compose run \
                    -e SNOWFLAKE_HOST \
                    -e SNOWFLAKE_PORT \
                    -e SNOWFLAKE_WAREHOUSE \
                    -e SNOWFLAKE_DATABASE \
                    -e SNOWFLAKE_SCHEMA \
                    -e SNOWFLAKE_USER \
                    -e SNOWFLAKE_PASSWORD \
                    -e GITHUB_USERNAME \
                    -e GITHUB_PASSWORD \
                    -e KBC_URL \
                    -e KBC_TOKEN \
                    -e KBC_TOKEN_NO_RO_MAPPING \
                    dev composer ci
    tests-in-kbc:
        needs: build
        runs-on: ubuntu-latest
        steps:
            -
                name: 'Run KBC test jobs'
                if: 'env.KBC_STORAGE_TOKEN && env.KBC_TEST_PROJECT_CONFIGS'
                uses: keboola/action-run-configs-parallel@master
                with:
                    token: '${{ env.KBC_STORAGE_TOKEN }}'
                    componentId: '${{ env.KBC_DEVELOPERPORTAL_APP }}'
                    tag: '${{ needs.build.outputs.app_image_tag }}'
                    configs: '${{ env.KBC_TEST_PROJECT_CONFIGS }}'
    deploy:
        needs:
            - build
            - tests
            - tests-in-kbc
        runs-on: ubuntu-latest
        if: 'startsWith(github.ref, ''refs/tags/'') && needs.build.outputs.is_semantic_tag == ''true'''
        steps:
            -
                name: 'Set tag in the Deloper Portal'
                uses: keboola/action-set-tag-developer-portal@master
                with:
                    vendor: '${{ env.KBC_DEVELOPERPORTAL_VENDOR }}'
                    app_id: '${{ env.KBC_DEVELOPERPORTAL_APP }}'
                    username: '${{ env.KBC_DEVELOPERPORTAL_USERNAME }}'
                    password: '${{ env.KBC_DEVELOPERPORTAL_PASSWORD }}'
                    tag: '${{ needs.build.outputs.app_image_tag }}'
